@page "/recipes";
@inject IRecipeService _recipeService;
@inject IInventoryService _inventoryService;

<h3 class="text-center text-light cubano-font">Recipes</h3>

<div class="container-fluid d-flex justify-content-between align-items-start">
    @foreach (var recipe in _recipeService.Recipes)
    {
        <div class="card" style="width: 25rem">
            <div class="card-body">
                <h5 class="card-title cubano-font">@recipe.Name</h5>
                <p class="card-text">@recipe.Description</p>
            </div>
            <img src="@recipe.ImageUrl" class="card-img-top" alt="@recipe.Name">
            <ul class="list-group list-group-flush">
                <li class="list-group-item bg-dark text-light cubano-font">Ingredients</li>
                @foreach(var ingredient in recipe.Ingredients)
                {
                    <li class="list-group-item">@ingredient.Quantity@_inventoryService.ShowShortUnit(ingredient.Unit)  @ingredient.Name</li>
                }
                <li class="list-group-item bg-dark text-light cubano-font">Instructions</li>
            </ul>
            <div class="card-body">
                <div>
                    @((MarkupString)Markdig.Markdown.ToHtml(recipe.Instructions))
                </div>
                @*<a href="#" class="card-link">Another link</a>*@
                <div>
                    Preparation Time: @recipe.PrepTime minutes<br />
                    Cook Time: @recipe.CookTime minutes<br />
                    Servings: @recipe.Servings
                </div>
            </div>
        </div>
    }
</div>




@code {
    protected override async Task OnInitializedAsync()
    {
        await _recipeService.FetchRecipes();
    }
}
